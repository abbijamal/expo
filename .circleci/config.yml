version: 2

anchors:
  - &node_job
    working_directory: ~/expo
    docker:
      - image: circleci/node:8

  - &default_mac
    working_directory: /Users/distiller/project
    macos: # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
      xcode: "9.4.1"

  - &default_env_vars
    YARN_CACHE_FOLDER: ~/.cache/yarn

  - &set_up_environment
    run:
      name: Set up the environment
      command: |
        # Clone the submodules
        git submodule update --init

        # Update Yarn
        curl -o- -L https://yarnpkg.com/install.sh | bash
        echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> "$BASH_ENV"

        # Provide gulp
        yarn global add gulp@4.0.0

  - &install_workspace_dependencies
    run:
      name: Install Yarn workspace dependencies (node_modules)
      command: |
        # Run `yarn install` from the workspace root to install all of the workspaces' dependencies
        # including each other if there are co-dependencies
        yarn install

  - &fetch_cocoapods_specs
    run:
      name: Fetch CocoaPods Specs
      command: |
        curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf

  - &restore_yarn_cache
    restore_cache:
      # TODO: make the cache key depend on {{ checksum "yarn.lock" }} once we have a yarn.lock file
      key: yarn-v0-{{ .Branch }}

  - &save_yarn_cache
    save_cache:
      key: yarn-v0-{{ .Branch }}
      paths:
        - ~/.cache/yarn  # set by YARN_CACHE_FOLDER

  - &lint
    name: Lint
    command: yarn lint --max-warnings 0

  - &jest
    name: Unit tests (Jest)
    command: yarn jest --maxWorkers 2

workflows:
  version: 2

  # JavaScript packages that make up the SDK
  sdk:
    jobs:
      - expo_sdk
      - babel_preset

  # Android and iOS clients
  client:
    jobs:
      - home
      - client_ios
  #     - shell_app_sim_base_ios
  #     - shell_app_ios_tests:
  #         requires:
  #           - shell_app_sim_base_ios
  #           - test_suite_publish
  #     - test_suite_publish
  #     - client_android
  #     - client_android_tests:
  #         requires:
  #           - test_suite_publish
  #     - shell_app_base_android_new

jobs:
  expo_sdk:
    <<: *node_job
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *save_yarn_cache
      # Add back linting once we get ESLint or TSLint set up
      - run:
          <<: *jest
          working_directory: ~/expo/packages/expo

  babel_preset:
    <<: *node_job
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *save_yarn_cache
      - run:
          <<: *lint
          working_directory: ~/expo/packages/babel-preset-expo
      - run:
          <<: *jest
          working_directory: ~/expo/packages/babel-preset-expo

  home:
    <<: *node_job
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *restore_yarn_cache
      - *install_workspace_dependencies
      - *save_yarn_cache
      - run:
          <<: *jest
          working_directory: ~/expo/home

  client_ios:
    <<: *default_mac
    environment:
      <<: *default_env_vars
    steps:
      - checkout
      - *set_up_environment
      - *fetch_cocoapods_specs
      - run:
          working_directory: ~/project/tools-public
          command: yarn install
      - run:
          working_directory: ~/project/tools-public
          command: ./generate-files-ios.sh
      - run: fastlane ios create_simulator_build
